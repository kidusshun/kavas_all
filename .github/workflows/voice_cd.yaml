name: VOICE_CD

on:
  push:
    branches:
      - main
    paths:
      - "KAVAS/**"
      - ".github/workflows/voice_cd.yaml"

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: install requirements
        run: |
          cd KAVAS/
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.user_name }}
          password: ${{ secrets.password }}

      - name: Create .env file
        run: |
          cd KAVAS
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_CONNECTION_TIMEOUT=${{ secrets.DB_CONNECTION_TIMEOUT }}" >> .env
          echo "DB_POOL_MIN_SIZE=${{ secrets.DB_POOL_MIN_SIZE }}" >> .env
          echo "DB_POOL_MAX_SIZE=${{ secrets.DB_POOL_MAX_SIZE }}" >> .env
          echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> .env

      - name: Build Docker compose image
        run: |
          cd KAVAS
          docker-compose build

      - name: tag Docker image
        run: |
          docker tag app kidusshun/kavas_voice_service:latest

      - name: Push Docker image
        run: |
          docker push kidusshun/kavas_voice_service:latest
