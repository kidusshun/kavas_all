services:
  rag:
    image: self-reflective-rag:latest
    build:
      context: ./self-reflective-rag/
      dockerfile: Dockerfile
      # Assuming HF_TOKEN is needed during build, keep args
      args:
        HF_TOKEN: ${HF_TOKEN}
    container_name: rag
    restart: always
    env_file:
      - .env

    depends_on:
      mongodb:
        condition: service_started
    ports:
      - "8002:8000"

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_AUTH_SOURCE}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongo_vol:/data/db

  db:
    image: ankane/pgvector:latest
    container_name: face-recognition-postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgress
      POSTGRES_DB: face_recognition
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 5s

  fastapi_app:
    # build: .
    image: hanna95/face-recognition-fastapi_app:v2
    build:
      context: ./face-recognition
      dockerfile: Dockerfile
    container_name: face-recognition-fastapi_app
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8000:8000"
    command:
      [
        "uvicorn",
        "app.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8000",
        "--reload",
      ]

  orchestrator:
    image: orchestrator:latest
    build:
      context: ./orchestrator
      dockerfile: Dockerfile
    container_name: orchestrator
    restart: always
    env_file:
      - .env
    ports:
      - "8004:8004"

  kavas_db:
    image: ankane/pgvector:latest
    container_name: kavas_db
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456789
      POSTGRES_DB: kavas
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "8502:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 5s

  app:
    image: kavas_voice_service:latest
    build:
      context: ./KAVAS/
      dockerfile: Dockerfile
      args:
        HF_TOKEN: ${HF_TOKEN}
    container_name: voice_recognition
    depends_on:
      kavas_db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8001:8000"
    volumes:
      - .:/app
    command:
      ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

volumes:
  postgres_data:
  mongo_vol:
    driver: local
